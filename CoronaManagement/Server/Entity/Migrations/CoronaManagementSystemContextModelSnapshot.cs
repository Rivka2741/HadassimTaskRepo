// <auto-generated />
using System;
//using ManagementOfCoronaPatients;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(CoronaManagementSystemContext))]
    partial class CoronaManagementSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManagementOfCoronaPatients.SickWithCorona", b =>
                {
                    b.Property<int>("SickId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SickID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SickId"));

                    b.Property<DateTime?>("PositiveResultDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("RecoveryDate")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SickId")
                        .HasName("PK__SickWith__1F450E983E26633A");

                    b.HasIndex("UserId");

                    b.ToTable("SickWithCorona", (string)null);
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "IdentityCard" }, "UQ__Users__DA5B2F6DCDC44573")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.VaccinationDetail", b =>
                {
                    b.Property<int>("VaccinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VaccinationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VaccinationId"));

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<DateTime?>("VaccineDate")
                        .HasColumnType("date");

                    b.Property<int?>("VaccineManufacturerId")
                        .HasColumnType("int")
                        .HasColumnName("VaccineManufacturerID");

                    b.HasKey("VaccinationId")
                        .HasName("PK__Vaccinat__466BCFA7BDBBF83E");

                    b.HasIndex("UserId");

                    b.HasIndex("VaccineManufacturerId");

                    b.ToTable("VaccinationDetails");
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.VaccineManufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ManufacturerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"));

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ManufacturerId")
                        .HasName("PK__VaccineM__357E5CA1514B7D65");

                    b.ToTable("VaccineManufacturers");
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.SickWithCorona", b =>
                {
                    b.HasOne("ManagementOfCoronaPatients.User", "User")
                        .WithMany("SickWithCoronas")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__SickWithC__UserI__3A81B327");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.VaccinationDetail", b =>
                {
                    b.HasOne("ManagementOfCoronaPatients.User", "User")
                        .WithMany("VaccinationDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Vaccinati__UserI__3F466844");

                    b.HasOne("ManagementOfCoronaPatients.VaccineManufacturer", "VaccineManufacturer")
                        .WithMany("VaccinationDetails")
                        .HasForeignKey("VaccineManufacturerId")
                        .HasConstraintName("FK__Vaccinati__Vacci__403A8C7D");

                    b.Navigation("User");

                    b.Navigation("VaccineManufacturer");
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.User", b =>
                {
                    b.Navigation("SickWithCoronas");

                    b.Navigation("VaccinationDetails");
                });

            modelBuilder.Entity("ManagementOfCoronaPatients.VaccineManufacturer", b =>
                {
                    b.Navigation("VaccinationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
